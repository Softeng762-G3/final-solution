<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1234.4,832.8" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabc="clr-namespace:UiPath.Excel.Activities.Business.ChartModifications;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business.ChartModifications</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="512,768" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment sap:VirtualizedContainerService.HintSize="449.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_17" Text="// Running process to scrape PHEV listing page urls" />
    <Sequence DisplayName="ScrapeListingUrls" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="ExtractDataTable">
          <Variable.Default>
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">new System.Data.DataTable();</CSharpValue>
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:String" Name="variable1" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="520,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">"Beginning Trade Me Listing URL Scraping"</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <ui:OpenBrowser AutomaticallyDownloadWebDriver="{x:Null}" CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Edge" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="520,268" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Url="https://www.trademe.co.nz/a/motors/cars/plug-in-hybrid/search?listed_as=classifieds&amp;vehicle_condition=used">
        <ui:OpenBrowser.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">"Browser Open to Scrape Listing URLs"</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
          </ActivityAction>
        </ui:OpenBrowser.Body>
      </ui:OpenBrowser>
      <ui:Comment sap:VirtualizedContainerService.HintSize="520,75.2" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Navigate through page numbers to scrape all URL of used PHEV listings" />
      <Sequence DisplayName="URL Scraping" sap:VirtualizedContainerService.HintSize="520,372" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Edge" DisplayName="Attach Browser 'Used Hybrid Cars Page'" sap:VirtualizedContainerService.HintSize="433.6,260" sap2010:WorkflowViewState.IdRef="BrowserScope_1" Selector="&lt;html app='msedge.exe' title='Used Hybrid Cars NZ - Hybrid Cars For Sale - Trade Me | Trade Me Motors' /&gt;">
          <ui:BrowserScope.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
              </ActivityAction.Argument>
              <ui:ExtractData DelayBetweenPagesMS="{x:Null}" sap2010:Annotation.AnnotationText="Proceed through page numbers and extract listing URLs" ContinueOnError="True" DisplayName="Extract Structured Data 'TG-ROW'" ExtractMetadata="&lt;extract&gt;&lt;column exact='1' name='Title' attr='text' name2='Url' attr2='href'&gt;&lt;webctrl tag='tg-col' /&gt;&lt;webctrl tag='tm-search-card-switcher' idx='1' /&gt;&lt;webctrl tag='tm-motors-advanced-search-card' idx='1' /&gt;&lt;webctrl tag='div' idx='1' /&gt;&lt;webctrl tag='div' idx='1' /&gt;&lt;webctrl tag='a' idx='1' /&gt;&lt;webctrl tag='div' idx='2' /&gt;&lt;webctrl tag='div' idx='1' /&gt;&lt;webctrl tag='div' idx='2' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap:VirtualizedContainerService.HintSize="333.6,151.2" sap2010:WorkflowViewState.IdRef="ExtractData_1" MaxNumberOfResults="0" NextLinkSelector="&lt;webctrl aaname=' Next ' tag='A' /&gt;" SimulateClick="True">
                <ui:ExtractData.DataTable>
                  <InOutArgument x:TypeArguments="sd:DataTable">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">ExtractDataTable</CSharpReference>
                  </InOutArgument>
                </ui:ExtractData.DataTable>
                <ui:ExtractData.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3e031f45-3d4a-4e93-8cba-db5d677090fb" InformativeScreenshot="daef0a0b914e482ca41f68ee0d69f221" Selector="&lt;webctrl tag='TG-ROW' /&gt;" WaitForReady="COMPLETE">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                  </ui:Target>
                </ui:ExtractData.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExtractData>
            </ActivityAction>
          </ui:BrowserScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:BrowserScope>
      </Sequence>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="520,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">"Completed URL scraping, Writing Data to web_scraping.xlsx"</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <ui:Comment sap:VirtualizedContainerService.HintSize="520,75.2" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// Save extracted URL of all used PHEV listings to a file" />
      <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Save URL to Excel file named web_scraping. Can be found in ____ folder." DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="520,340.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="web_scraping.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Write to Excel File" sap:VirtualizedContainerService.HintSize="449.6,200" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelWriteRange AddHeaders="True" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="387.2,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="A1">
                <ui:ExcelWriteRange.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">ExtractDataTable</CSharpValue>
                  </InArgument>
                </ui:ExcelWriteRange.DataTable>
              </ui:ExcelWriteRange>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <TryCatch sap2010:Annotation.AnnotationText="Close window after the scraping activity. Notify user if browser fails to close." DisplayName="Try Catch Closing Browser Error" sap:VirtualizedContainerService.HintSize="520,508" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Edge" DisplayName="Attach Browser 'Used Hybrid Cars Page'" sap:VirtualizedContainerService.HintSize="483.2,245.6" sap2010:WorkflowViewState.IdRef="BrowserScope_2" Selector="&lt;html app='msedge.exe' title='Used Hybrid Cars NZ - Hybrid Cars For Sale - Trade Me | Trade Me Motors' /&gt;">
            <ui:BrowserScope.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,136.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CloseTab Browser="{x:Null}" DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="387.2,24.8" sap2010:WorkflowViewState.IdRef="CloseTab_1" />
                </Sequence>
              </ActivityAction>
            </ui:BrowserScope.Body>
          </ui:BrowserScope>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:InvalidOperationException" sap:VirtualizedContainerService.HintSize="486.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:InvalidOperationException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:InvalidOperationException" Name="exception" />
              </ActivityAction.Argument>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
        <TryCatch.Finally>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn">
            <ui:LogMessage.Message>
              <InArgument x:TypeArguments="x:Object">
                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">"Failed to close browser."</CSharpValue>
              </InArgument>
            </ui:LogMessage.Message>
          </ui:LogMessage>
        </TryCatch.Finally>
      </TryCatch>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="520,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">"Completed scraping Trade Me listing URLs."</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
    </Sequence>
    <ui:Comment sap:VirtualizedContainerService.HintSize="449.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_18" Text="// Running process to scrape vehicle information from listings" />
    <Sequence DisplayName="ScrapeListingInformation" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="urlDataTable" />
        <Variable x:TypeArguments="sd:DataTable" Name="scrapedDataTable" />
        <Variable x:TypeArguments="sd:DataTable" Name="y_m_m_DT" />
        <Variable x:TypeArguments="x:Int32" Name="mileAge" />
        <Variable x:TypeArguments="x:String" Name="price_scrapedData" />
        <Variable x:TypeArguments="x:String" Name="y_m_m" />
        <Variable x:TypeArguments="sd:DataTable" Name="ExtractDataTable">
          <Variable.Default>
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">new System.Data.DataTable();</CSharpValue>
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:Int32" Name="space_1" />
        <Variable x:TypeArguments="x:Int32" Name="space_2" />
        <Variable x:TypeArguments="x:Int32" Name="space_3" />
        <Variable x:TypeArguments="x:String" Name="year" />
        <Variable x:TypeArguments="x:String" Name="make" />
        <Variable x:TypeArguments="x:String" Name="model" />
        <Variable x:TypeArguments="x:String" Name="fuelEconomy" />
        <Variable x:TypeArguments="x:Int32" Name="price" />
        <Variable x:TypeArguments="x:String" Name="importHis" />
        <Variable x:TypeArguments="x:String" Name="fuelEco_scrapedData" />
        <Variable x:TypeArguments="x:String" Name="importHis_scrapedData" />
        <Variable x:TypeArguments="x:String" Name="mile_scrapedData" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:Comment sap:VirtualizedContainerService.HintSize="953.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_3" Text="// Open Excel file with scraped URL to read listing pages" />
      <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="The excel file is automatically saved in this file location from ScrapeListingUrls bot" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="953.6,356.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" MacroSetting="DisableAll" WorkbookPath="..\\..\\..\\scrapelistingurls\\1.0.5\\content\\web_scraping.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,216" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="The range is pre-set column that saved scraped URLs from ScrapeListingUrls bot." DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,104" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A1:B5" SheetName="Sheet1">
                <ui:ExcelReadRange.DataTable>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">urlDataTable</CSharpReference>
                  </OutArgument>
                </ui:ExcelReadRange.DataTable>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelReadRange>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="953.6,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Year&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Make&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Model&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Mile_x0020_Age_x0020__x0028_km_x0029_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Import_x0020_History&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Fuel_x0020_Economy&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Price_x0020__x0028__x0024__x0029_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
        <ui:BuildDataTable.DataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">scrapedDataTable</CSharpReference>
          </OutArgument>
        </ui:BuildDataTable.DataTable>
      </ui:BuildDataTable>
      <ui:LogMessage sap2010:Annotation.AnnotationText="Indication of how many URLs are being read" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="953.6,173.6" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9" xml:space="preserve">"Read " + urlDataTable.Rows.Count.ToString()  + " Urls"</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <ui:Comment sap:VirtualizedContainerService.HintSize="953.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_4" Text="// Open browser to scrape data from URLs read from the file" />
      <ui:OpenBrowser AutomaticallyDownloadWebDriver="{x:Null}" CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Edge" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="953.6,268" sap2010:WorkflowViewState.IdRef="OpenBrowser_2" Url="https://www.trademe.co.nz/a/motors/cars/plug-in-hybrid/search?listed_as=classifieds&amp;vehicle_condition=used">
        <ui:OpenBrowser.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_7">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">"Browser Opened to Begin Scraping Listing Data"</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
          </ActivityAction>
        </ui:OpenBrowser.Body>
      </ui:OpenBrowser>
      <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Edge" DisplayName="Attach Browser 'Used Hybrid Car Page'" sap:VirtualizedContainerService.HintSize="953.6,5747.2" sap2010:WorkflowViewState.IdRef="BrowserScope_3" Selector="&lt;html app='msedge.exe' title='Used Hybrid Cars NZ - Hybrid Cars For Sale - Trade Me | Trade Me Motors' /&gt;">
        <ui:BrowserScope.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="920,5638.4" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Comment sap:VirtualizedContainerService.HintSize="857.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_5" Text="// For each listing page, scrape necessary vehicle information data for users" />
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Open one vehicle listing page at a time to scrape necessary information data" DisplayName="Save Information to Data Table" sap:VirtualizedContainerService.HintSize="857.6,5346.4" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Data Scraping from Web" sap:VirtualizedContainerService.HintSize="824,5194.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage sap2010:Annotation.AnnotationText="Indication that scraping is beginning" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="761.6,173.6" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">"Scraping: " + row[0].ToString() + " from: " + row[1].ToString()</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                      <ui:NavigateTo Browser="{x:Null}" sap2010:Annotation.AnnotationText="Open listing page" DisplayName="Navigate To" sap:VirtualizedContainerService.HintSize="761.6,91.2" sap2010:WorkflowViewState.IdRef="NavigateTo_1">
                        <ui:NavigateTo.Url>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">row[1].ToString()</CSharpValue>
                          </InArgument>
                        </ui:NavigateTo.Url>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:NavigateTo>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="761.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_6" Text="// Scrape vehicle year, make and model information and save to table" />
                      <Sequence DisplayName="Data Scraping Year Make Model" sap:VirtualizedContainerService.HintSize="761.6,397.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" sap2010:Annotation.AnnotationText="Find vehicle description element from Trade Me HTML" DisplayName="Find Element 'H1'" sap:VirtualizedContainerService.HintSize="387.2,138.4" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1">
                          <ui:WaitUiElementAppear.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6302e06a-cb06-4392-9600-0e53ff7583c3" InformativeScreenshot="4013a73d4ab5becba0989462617fea05" Selector="&lt;webctrl tag='H1' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:WaitUiElementAppear.Target>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:WaitUiElementAppear>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'Year+Make+Model'" sap:VirtualizedContainerService.HintSize="387.2,107.2" sap2010:WorkflowViewState.IdRef="GetValue_1">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9ac61392-67c9-4d86-bf62-0ebc6aac21d4" InformativeScreenshot="4013a73d4ab5becba0989462617fea05" Selector="&lt;webctrl tag='H1' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">y_m_m</CSharpReference>
                            </OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                      </Sequence>
                      <Assign sap2010:Annotation.AnnotationText="space is int var to save number of space to extract Title string" sap:VirtualizedContainerService.HintSize="761.6,112.8" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">space_1</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">y_m_m.IndexOf(' ');</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="space is int var to save number of space to extract Title string" sap:VirtualizedContainerService.HintSize="761.6,112.8" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">space_2</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">y_m_m.IndexOf(' ', space_1 + 1);</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="space is int var to save number of space to extract Title string" sap:VirtualizedContainerService.HintSize="761.6,112.8" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">space_3</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">y_m_m.IndexOf(' ', space_2 + 1);</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="761.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">year</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">y_m_m.Substring(space_1+1, space_2 - space_1 -1);</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="761.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">make</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">y_m_m.Substring(space_2 + 1, space_3 - space_2 -1);</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="761.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_6">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">model</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">y_m_m.Substring(space_3 + 1);</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="761.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_7" Text="// Scrape vehicle mileage information and save to table" />
                      <ui:AnchorBase AnchorPosition="Auto" DisplayName="Data Scraping Mileage" sap:VirtualizedContainerService.HintSize="761.6,244" sap2010:WorkflowViewState.IdRef="AnchorBase_1">
                        <ui:AnchorBase.Action>
                          <ActivityAction x:TypeArguments="ui:Anchor">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                            </ActivityAction.Argument>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'DIV'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="GetValue_2">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="460d5f03-46e8-41b0-80f3-c83a2531c84f" InformativeScreenshot="deb33f51deab0851f8c89f92a5de2329" Selector="&lt;webctrl tag='DIV' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">mile_scrapedData</CSharpReference>
                                </OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                          </ActivityAction>
                        </ui:AnchorBase.Action>
                        <ui:AnchorBase.AnchorProvider>
                          <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" sap2010:Annotation.AnnotationText="Find mileage description element from Trade Me HTML" DisplayName="Find Element 'PATH'" sap:VirtualizedContainerService.HintSize="333.6,151.2" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_2">
                            <ui:WaitUiElementAppear.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f55e3ce1-2ebd-43e4-b557-42e19864543d" InformativeScreenshot="27dedf23e55370fe4f4250259ec87b69" Selector="&lt;webctrl parentname='vehicle-odometer' tag='path' /&gt;" TimeoutMS="100">
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:WaitUiElementAppear.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:WaitUiElementAppear>
                        </ui:AnchorBase.AnchorProvider>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:AnchorBase>
                      <Assign sap:VirtualizedContainerService.HintSize="761.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">mileAge</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">int.Parse(new string(mile_scrapedData.Where(char.IsDigit).ToArray()));</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="761.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_8" Text="// Scrape vehicle import history information and save to table" />
                      <TryCatch sap2010:Annotation.AnnotationText="In the case of import history field of the vehicle being empty, assign empty string to avoid Null" DisplayName="Try Catch Import History" sap:VirtualizedContainerService.HintSize="761.6,546.4" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <ui:AnchorBase AnchorPosition="Auto" DisplayName="Data Scraping Import History" sap:VirtualizedContainerService.HintSize="724.8,284" sap2010:WorkflowViewState.IdRef="AnchorBase_2">
                            <ui:AnchorBase.Action>
                              <ActivityAction x:TypeArguments="ui:Anchor">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                                </ActivityAction.Argument>
                                <ui:GetFullText IgnoreHidden="{x:Null}" DisplayName="Get Full Text 'DIV'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="GetFullText_1">
                                  <ui:GetFullText.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="84b3d18b-7023-4f8e-b449-f598155abf48" InformativeScreenshot="e1face0a2fc90d5c75d9b21e31f27bf9" Selector="&lt;webctrl tag='DIV' /&gt;" TimeoutMS="100">
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:GetFullText.Target>
                                  <ui:GetFullText.Text>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">importHis_scrapedData</CSharpReference>
                                    </OutArgument>
                                  </ui:GetFullText.Text>
                                </ui:GetFullText>
                              </ActivityAction>
                            </ui:AnchorBase.Action>
                            <ui:AnchorBase.AnchorProvider>
                              <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" sap2010:Annotation.AnnotationText="Find import history description element from Trade Me HTML" ContinueOnError="False" DisplayName="Find Element 'SPAN'" sap:VirtualizedContainerService.HintSize="333.6,151.2" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_3">
                                <ui:WaitUiElementAppear.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="72281634-02c4-443c-9833-191ad3eecb06" InformativeScreenshot="521987dfe49c24d24ca8b6b50dd6d165" Selector="&lt;webctrl aaname=' Import history:  ' tag='SPAN' /&gt;" TimeoutMS="100">
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:WaitUiElementAppear.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:WaitUiElementAppear>
                            </ui:AnchorBase.AnchorProvider>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AnchorBase>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="728,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">importHis_scrapedData</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <Assign sap:VirtualizedContainerService.HintSize="761.6,83.2" sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">importHis</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22" xml:space="preserve">!importHis_scrapedData.Contains("Import history:") ? "Unavailable" :
importHis_scrapedData.Contains("Imported") ? "Imported" :
importHis_scrapedData.Contains("NZ New") ? "NZ New" : 
"Unavailable";</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="761.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_9" Text="// Scrape fuel economy information and save to table" />
                      <TryCatch sap2010:Annotation.AnnotationText="In the case of fuel economy field of the vehicle being empty, assign empty string to avoid Null" DisplayName="Try Catch Fuel Economy" sap:VirtualizedContainerService.HintSize="761.6,718.4" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <ui:AnchorBase AnchorPosition="Top" sap2010:Annotation.AnnotationText="Find fuel economy element by using one UI element as anchor base" DisplayName="Data Scraping Fuel Economy" sap:VirtualizedContainerService.HintSize="383.2,443.2" sap2010:WorkflowViewState.IdRef="AnchorBase_3">
                            <ui:AnchorBase.Action>
                              <ActivityAction x:TypeArguments="ui:Anchor">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                                </ActivityAction.Argument>
                                <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'DIV'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="GetValue_3">
                                  <ui:GetValue.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2b5b15a5-2bb7-47de-abc6-0c8732d35b9a" InformativeScreenshot="9daadb0d392ab3c290a619dbf79a3cd5" Selector="&lt;webctrl tag='DIV' /&gt;">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:GetValue.Target>
                                  <ui:GetValue.Value>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">fuelEco_scrapedData</CSharpReference>
                                    </OutArgument>
                                  </ui:GetValue.Value>
                                </ui:GetValue>
                              </ActivityAction>
                            </ui:AnchorBase.Action>
                            <ui:AnchorBase.AnchorProvider>
                              <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" sap2010:Annotation.AnnotationText="Find import history description element from Trade Me HTML" ContinueOnError="False" DisplayName="Find Element 'DIV'" sap:VirtualizedContainerService.HintSize="333.6,151.2" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_4">
                                <ui:WaitUiElementAppear.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="517d744e-1cc7-44dd-b1a0-a4ed8f68cffd" InformativeScreenshot="d1288c9c4c1dc47d762f6a86338a67e9" Selector="&lt;webctrl css-selector='body&amp;gt;tm-root&amp;gt;div&amp;gt;main&amp;gt;div&amp;gt;tm-new-listing&amp;gt;tm-dealer-listing&amp;gt;div&amp;gt;div&amp;gt;tm-listing-ratings&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div' tag='DIV' /&gt;" TimeoutMS="100">
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:WaitUiElementAppear.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:WaitUiElementAppear>
                            </ui:AnchorBase.AnchorProvider>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AnchorBase>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_10">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">fuelEco_scrapedData</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">"Unavailable"</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <Assign sap:VirtualizedContainerService.HintSize="761.6,83.2" sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">fuelEconomy</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24" xml:space="preserve">string.IsNullOrWhiteSpace(fuelEco_scrapedData) || 
              !fuelEco_scrapedData.Any(char.IsDigit) || 
              !fuelEco_scrapedData.Any(char.IsLetter) || 
              !fuelEco_scrapedData.Any(p =&gt; !char.IsLetterOrDigit(p)) || 
              fuelEco_scrapedData.Contains("Unavailable") ? 
              "Unavailable" : fuelEco_scrapedData;</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Move down the page to find price element" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="761.6,147.2" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="pgdn" KeyModifiers="None" SpecialKey="True">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="df381c49-9925-4ce9-baac-fd468bf8539f">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SendHotkey.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:SendHotkey>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="761.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_10" Text="// Scrape price information and save to table" />
                      <TryCatch sap2010:Annotation.AnnotationText="In the case of fuel economy field of the vehicle being empty, assign string &quot;Unavailable&quot; to avoid Null" DisplayName="Try Catch Price" sap:VirtualizedContainerService.HintSize="761.6,231.2" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <ui:AnchorBase AnchorPosition="Top" DisplayName="Data Scraping Price" sap:VirtualizedContainerService.HintSize="724.8,386.4" sap2010:WorkflowViewState.IdRef="AnchorBase_4">
                            <ui:AnchorBase.Action>
                              <ActivityAction x:TypeArguments="ui:Anchor">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                                </ActivityAction.Argument>
                                <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'P'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="GetValue_4">
                                  <ui:GetValue.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a02fa15d-9f3e-46b9-8ec3-338b4ba2afa2" InformativeScreenshot="e1487822a16b13708828bc73e94252ba" Selector="&lt;webctrl tag='DIV' /&gt;" TimeoutMS="100">
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:GetValue.Target>
                                  <ui:GetValue.Value>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">price_scrapedData</CSharpReference>
                                    </OutArgument>
                                  </ui:GetValue.Value>
                                </ui:GetValue>
                              </ActivityAction>
                            </ui:AnchorBase.Action>
                            <ui:AnchorBase.AnchorProvider>
                              <ui:WaitUiElementAppear FoundElement="{x:Null}" sap2010:Annotation.AnnotationText="Find price description element from Trade Me HTML" ContinueOnError="False" DisplayName="Find Element 'BODY'" sap:VirtualizedContainerService.HintSize="333.6,138.4" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_5" WaitActive="True" WaitVisible="True">
                                <ui:WaitUiElementAppear.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="406bf7c9-85a1-4f2e-91d8-00815c3b490e" InformativeScreenshot="2f2c7a6e736311cb6f4dc1e6287ec3a3" Selector="&lt;webctrl css-selector='body&amp;gt;tm-root&amp;gt;div&amp;gt;main&amp;gt;div&amp;gt;tm-new-listing&amp;gt;tm-dealer-listing&amp;gt;tm-sticky-header&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div' isleaf='1' tag='DIV' /&gt;" TimeoutMS="100">
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:WaitUiElementAppear.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:WaitUiElementAppear>
                            </ui:AnchorBase.AnchorProvider>
                          </ui:AnchorBase>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_12">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">price_scrapedData</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Unavailable</InArgument>
                                </Assign.Value>
                              </Assign>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <Assign sap:VirtualizedContainerService.HintSize="761.6,83.2" sap2010:WorkflowViewState.IdRef="Assign_13">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">price</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25" xml:space="preserve">string.IsNullOrWhiteSpace(price_scrapedData) || !price_scrapedData.Any(char.IsDigit) || price_scrapedData.Contains("Unavailable") ? 
        -1 : 
        int.Parse(new string(price_scrapedData.Where(char.IsDigit).ToArray()));</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="761.6,94.4" sap2010:WorkflowViewState.IdRef="Comment_11" Text="// Data scraping complete for one vehicle. Create new row in data table to scrape the next listing." />
                      <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="761.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                        <ui:AddDataRow.ArrayRow>
                          <InArgument x:TypeArguments="s:Object[]">
                            <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">new object[] {year, make, model, mileAge, importHis, fuelEconomy, price}</CSharpValue>
                          </InArgument>
                        </ui:AddDataRow.ArrayRow>
                        <ui:AddDataRow.DataTable>
                          <InOutArgument x:TypeArguments="sd:DataTable">
                            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">scrapedDataTable</CSharpReference>
                          </InOutArgument>
                        </ui:AddDataRow.DataTable>
                      </ui:AddDataRow>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <ui:ForEachRow.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">urlDataTable</CSharpValue>
                  </InArgument>
                </ui:ForEachRow.DataTable>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
              <ui:CloseTab Browser="{x:Null}" DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="857.6,24.8" sap2010:WorkflowViewState.IdRef="CloseTab_2" />
            </Sequence>
          </ActivityAction>
        </ui:BrowserScope.Body>
      </ui:BrowserScope>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="953.6,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">"Writing Data to ListingData.xlsx"</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <ui:Comment sap:VirtualizedContainerService.HintSize="953.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_12" Text="// Save extracted data of all used PHEV listings to a file" />
      <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Save data to Excel file named scrape_data. Can be found in ___ folder." DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="953.6,340.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" MacroSetting="DisableAll" WorkbookPath="scrape_data.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Write to Excel File" sap:VirtualizedContainerService.HintSize="449.6,200" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelWriteRange AddHeaders="True" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="387.2,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Sheet1" StartingCell="A1">
                <ui:ExcelWriteRange.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">scrapedDataTable</CSharpValue>
                  </InArgument>
                </ui:ExcelWriteRange.DataTable>
              </ui:ExcelWriteRange>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="579.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">"Completed scraping listing information"</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
    </Sequence>
    <ui:Comment sap:VirtualizedContainerService.HintSize="449.6,56" sap2010:WorkflowViewState.IdRef="Comment_19" Text="// Running process to visualise scraped data " />
    <Sequence DisplayName="Visualisation" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_19">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" sap2010:Annotation.AnnotationText="Get Excel file with scraped listing informations" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="534.4,4655.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="..\\..\\..\\scrapelistinginformation\\1.0.17\\content\\scrape_data.xlsx">
        <ueab:ExcelApplicationCard.Body>
          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="500.8,4354.4" sap2010:WorkflowViewState.IdRef="Sequence_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Comment sap:VirtualizedContainerService.HintSize="438.4,75.2" sap2010:WorkflowViewState.IdRef="Comment_13" Text="// Create pie chart to visualise proportion of car brands" />
              <ueab:CreatePivotTableXv2 DisplayName="Create Pivot Table Car Brands" sap:VirtualizedContainerService.HintSize="438.4,428.8" sap2010:WorkflowViewState.IdRef="CreatePivotTableXv2_1" LayoutRowType="Compact" TableName="Car Brands" ValuesMode="Columns">
                <ueab:CreatePivotTableXv2.Body>
                  <ActivityAction>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Make" Function="Sum" sap:VirtualizedContainerService.HintSize="382.4,85.6" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_1" Type="Row" />
                      <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Model" Function="Count" sap:VirtualizedContainerService.HintSize="382.4,85.6" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_2" Type="Value" />
                    </Sequence>
                  </ActivityAction>
                </ueab:CreatePivotTableXv2.Body>
                <ueab:CreatePivotTableXv2.DestinationRange>
                  <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                    <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">Excel.Sheet["Summary tables"].Range["A:B"]</CSharpValue>
                  </InArgument>
                </ueab:CreatePivotTableXv2.DestinationRange>
                <ueab:CreatePivotTableXv2.Range>
                  <InArgument x:TypeArguments="ue:IReadRangeRef">
                    <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">Excel.Sheet["Sheet1"]</CSharpValue>
                  </InArgument>
                </ueab:CreatePivotTableXv2.Range>
              </ueab:CreatePivotTableXv2>
              <ueab:InsertExcelChartX ChartCategory="Pie" ChartHeight="211" ChartType="xlPie" ChartWidth="355" DisplayName="Insert Pie Chart" sap:VirtualizedContainerService.HintSize="438.4,236.8" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_1" Left="60" Top="20">
                <ueab:InsertExcelChartX.InsertIntoSheet>
                  <InArgument x:TypeArguments="ue:ISheetRef">
                    <CSharpValue x:TypeArguments="ue:ISheetRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">Excel.Sheet["Sheet 2"]</CSharpValue>
                  </InArgument>
                </ueab:InsertExcelChartX.InsertIntoSheet>
                <ueab:InsertExcelChartX.InsertedChart>
                  <OutArgument x:TypeArguments="ue:IChartRef">
                    <CSharpReference x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">Chart1</CSharpReference>
                  </OutArgument>
                </ueab:InsertExcelChartX.InsertedChart>
                <ueab:InsertExcelChartX.Range>
                  <InArgument x:TypeArguments="ue:IReadRangeRef">
                    <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">Excel.Sheet["Summary tables"].Range["A:B"]</CSharpValue>
                  </InArgument>
                </ueab:InsertExcelChartX.Range>
              </ueab:InsertExcelChartX>
              <ueab:UpdateChartX DisplayName="Update Chart Labels" sap:VirtualizedContainerService.HintSize="438.4,360.8" sap2010:WorkflowViewState.IdRef="UpdateChartX_1">
                <ueab:UpdateChartX.Body>
                  <ActivityAction>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueabc:ModifyChartTitleModification DisplayName="Modify Chart Title" sap:VirtualizedContainerService.HintSize="387.2,80.8" sap2010:WorkflowViewState.IdRef="ModifyChartTitleModification_1" Title="Car Brands" />
                      <ueabc:ShowHideDataLabelsModification DisplayName="Show/Hide Data Labels" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ShowHideDataLabelsModification_1" ShowDataLabels="True" />
                      <ueabc:ShowHideLegendModification DisplayName="Show/Hide Legend" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ShowHideLegendModification_1" />
                    </Sequence>
                  </ActivityAction>
                </ueab:UpdateChartX.Body>
                <ueab:UpdateChartX.Chart>
                  <InArgument x:TypeArguments="ue:IChartRef">
                    <CSharpValue x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">Chart1</CSharpValue>
                  </InArgument>
                </ueab:UpdateChartX.Chart>
              </ueab:UpdateChartX>
              <ui:Comment sap:VirtualizedContainerService.HintSize="438.4,75.2" sap2010:WorkflowViewState.IdRef="Comment_14" Text="// Create a column chart to visualise average price for each brand" />
              <ueab:CreatePivotTableXv2 DisplayName="Create Pivot Table Price" sap:VirtualizedContainerService.HintSize="438.4,428.8" sap2010:WorkflowViewState.IdRef="CreatePivotTableXv2_2" LayoutRowType="Compact" TableName="Average Price for Car Brand" ValuesMode="Columns">
                <ueab:CreatePivotTableXv2.Body>
                  <ActivityAction>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Make" Function="Sum" sap:VirtualizedContainerService.HintSize="382.4,85.6" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_3" Type="Row" />
                      <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Price ($)" Function="Average" sap:VirtualizedContainerService.HintSize="382.4,85.6" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_4" Type="Value" />
                    </Sequence>
                  </ActivityAction>
                </ueab:CreatePivotTableXv2.Body>
                <ueab:CreatePivotTableXv2.DestinationRange>
                  <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                    <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">Excel.Sheet["Summary tables"].Range["D:E"]</CSharpValue>
                  </InArgument>
                </ueab:CreatePivotTableXv2.DestinationRange>
                <ueab:CreatePivotTableXv2.Range>
                  <InArgument x:TypeArguments="ue:IReadRangeRef">
                    <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">Excel.Sheet["Sheet1"]</CSharpValue>
                  </InArgument>
                </ueab:CreatePivotTableXv2.Range>
              </ueab:CreatePivotTableXv2>
              <ueab:InsertExcelChartX ChartCategory="Column" ChartHeight="211" ChartType="xlColumnStacked" ChartWidth="355" DisplayName="Insert Column Chart" sap:VirtualizedContainerService.HintSize="438.4,236.8" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_2" Left="60" Top="20">
                <ueab:InsertExcelChartX.InsertIntoSheet>
                  <InArgument x:TypeArguments="ue:ISheetRef">
                    <CSharpValue x:TypeArguments="ue:ISheetRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">Excel.Sheet["Sheet 3"]</CSharpValue>
                  </InArgument>
                </ueab:InsertExcelChartX.InsertIntoSheet>
                <ueab:InsertExcelChartX.InsertedChart>
                  <OutArgument x:TypeArguments="ue:IChartRef">
                    <CSharpReference x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">Chart2</CSharpReference>
                  </OutArgument>
                </ueab:InsertExcelChartX.InsertedChart>
                <ueab:InsertExcelChartX.Range>
                  <InArgument x:TypeArguments="ue:IReadRangeRef">
                    <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">Excel.Sheet["Summary tables"].Range["D:E"]</CSharpValue>
                  </InArgument>
                </ueab:InsertExcelChartX.Range>
              </ueab:InsertExcelChartX>
              <ueab:UpdateChartX DisplayName="Update Chart Labels" sap:VirtualizedContainerService.HintSize="438.4,360.8" sap2010:WorkflowViewState.IdRef="UpdateChartX_2">
                <ueab:UpdateChartX.Body>
                  <ActivityAction>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_15">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueabc:ModifyChartTitleModification DisplayName="Modify Chart Title" sap:VirtualizedContainerService.HintSize="387.2,80.8" sap2010:WorkflowViewState.IdRef="ModifyChartTitleModification_2" Title="Average Price for Car Brand" />
                      <ueabc:ShowHideLegendModification DisplayName="Show/Hide Legend" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ShowHideLegendModification_2" />
                      <ueabc:ShowHideDataLabelsModification DisplayName="Show/Hide Data Labels" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ShowHideDataLabelsModification_2" ShowDataLabels="True" />
                    </Sequence>
                  </ActivityAction>
                </ueab:UpdateChartX.Body>
                <ueab:UpdateChartX.Chart>
                  <InArgument x:TypeArguments="ue:IChartRef">
                    <CSharpValue x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">Chart2</CSharpValue>
                  </InArgument>
                </ueab:UpdateChartX.Chart>
              </ueab:UpdateChartX>
              <ui:Comment sap:VirtualizedContainerService.HintSize="438.4,75.2" sap2010:WorkflowViewState.IdRef="Comment_15" Text="// Create a column chart to visualise average mileage" />
              <ueab:CreatePivotTableXv2 DisplayName="Create Pivot Table Mileage" sap:VirtualizedContainerService.HintSize="438.4,428.8" sap2010:WorkflowViewState.IdRef="CreatePivotTableXv2_3" LayoutRowType="Compact" TableName="Average Mileage for Car Brand" ValuesMode="Columns">
                <ueab:CreatePivotTableXv2.Body>
                  <ActivityAction>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_16">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Make" Function="Sum" sap:VirtualizedContainerService.HintSize="382.4,85.6" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_5" Type="Row" />
                      <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Mile Age (km)" Function="Average" sap:VirtualizedContainerService.HintSize="382.4,85.6" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_6" Type="Value" />
                    </Sequence>
                  </ActivityAction>
                </ueab:CreatePivotTableXv2.Body>
                <ueab:CreatePivotTableXv2.DestinationRange>
                  <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                    <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">Excel.Sheet["Summary tables"].Range["G:H"]</CSharpValue>
                  </InArgument>
                </ueab:CreatePivotTableXv2.DestinationRange>
                <ueab:CreatePivotTableXv2.Range>
                  <InArgument x:TypeArguments="ue:IReadRangeRef">
                    <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">Excel.Sheet["Sheet1"]</CSharpValue>
                  </InArgument>
                </ueab:CreatePivotTableXv2.Range>
              </ueab:CreatePivotTableXv2>
              <ueab:InsertExcelChartX ChartCategory="Column" ChartHeight="211" ChartType="xlColumnStacked" ChartWidth="355" DisplayName="Insert Column Chart" sap:VirtualizedContainerService.HintSize="438.4,236.8" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_3" Left="60" Top="20">
                <ueab:InsertExcelChartX.InsertIntoSheet>
                  <InArgument x:TypeArguments="ue:ISheetRef">
                    <CSharpValue x:TypeArguments="ue:ISheetRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">Excel.Sheet["Sheet 4"]</CSharpValue>
                  </InArgument>
                </ueab:InsertExcelChartX.InsertIntoSheet>
                <ueab:InsertExcelChartX.InsertedChart>
                  <OutArgument x:TypeArguments="ue:IChartRef">
                    <CSharpReference x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">Chart3</CSharpReference>
                  </OutArgument>
                </ueab:InsertExcelChartX.InsertedChart>
                <ueab:InsertExcelChartX.Range>
                  <InArgument x:TypeArguments="ue:IReadRangeRef">
                    <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">Excel.Sheet["Summary tables"].Range["G:H"]</CSharpValue>
                  </InArgument>
                </ueab:InsertExcelChartX.Range>
              </ueab:InsertExcelChartX>
              <ueab:UpdateChartX DisplayName="Update Chart Label" sap:VirtualizedContainerService.HintSize="438.4,360.8" sap2010:WorkflowViewState.IdRef="UpdateChartX_3">
                <ueab:UpdateChartX.Body>
                  <ActivityAction>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueabc:ModifyChartTitleModification DisplayName="Modify Chart Title" sap:VirtualizedContainerService.HintSize="387.2,80.8" sap2010:WorkflowViewState.IdRef="ModifyChartTitleModification_3" Title="Average Mileage for Car Brand" />
                      <ueabc:ShowHideLegendModification DisplayName="Show/Hide Legend" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ShowHideLegendModification_3" />
                      <ueabc:ShowHideDataLabelsModification DisplayName="Show/Hide Data Labels" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ShowHideDataLabelsModification_3" ShowDataLabels="True" />
                    </Sequence>
                  </ActivityAction>
                </ueab:UpdateChartX.Body>
                <ueab:UpdateChartX.Chart>
                  <InArgument x:TypeArguments="ue:IChartRef">
                    <CSharpValue x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">Chart3</CSharpValue>
                  </InArgument>
                </ueab:UpdateChartX.Chart>
              </ueab:UpdateChartX>
              <ui:Comment sap:VirtualizedContainerService.HintSize="438.4,75.2" sap2010:WorkflowViewState.IdRef="Comment_16" Text="// Save created charts and graphs to a pdf file for user to view" />
              <ueab:SaveAsPdfX DestinationPdfPath=".\\report.pdf" DisplayName="Save Excel File As PDF" sap:VirtualizedContainerService.HintSize="438.4,160" sap2010:WorkflowViewState.IdRef="SaveAsPdfX_1" SaveQuality="StandardQuality">
                <ueab:SaveAsPdfX.EndPage>
                  <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                    <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="3" />
                  </InArgument>
                </ueab:SaveAsPdfX.EndPage>
                <ueab:SaveAsPdfX.StartPage>
                  <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                    <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="1" />
                  </InArgument>
                </ueab:SaveAsPdfX.StartPage>
                <ueab:SaveAsPdfX.Workbook>
                  <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                    <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">Excel</CSharpValue>
                  </InArgument>
                </ueab:SaveAsPdfX.Workbook>
              </ueab:SaveAsPdfX>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="438.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_11">
                <ui:LogMessage.Level>
                  <InArgument x:TypeArguments="ui:LogLevel">
                    <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Level>
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">"Visualisation saved to pdf file"</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
              </ui:LogMessage>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelApplicationCard.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelApplicationCard>
    </Sequence>
  </Sequence>
</Activity>