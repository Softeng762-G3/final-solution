<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="827,4408" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabc="clr-namespace:UiPath.Excel.Activities.Business.ChartModifications;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel.Activities.Business.ChartModifications</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="693,4343" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="631,4232" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="597,4145" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="ue:IChartRef" Name="Chart1" />
              <Variable x:TypeArguments="ue:IChartRef" Name="Chart2" />
              <Variable x:TypeArguments="ue:IChartRef" Name="Chart3" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="535,4034" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="..\\..\\..\\scrapelistinginformation\\1.0.17\\content\\scrape_data.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="501,3761" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:CreatePivotTableXv2 DisplayName="Create Pivot Table" sap:VirtualizedContainerService.HintSize="439,433" sap2010:WorkflowViewState.IdRef="CreatePivotTableXv2_2" LayoutRowType="Compact" TableName="Car Brands" ValuesMode="Columns">
                      <ueab:CreatePivotTableXv2.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Make" Function="Sum" sap:VirtualizedContainerService.HintSize="382,86.4" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_1" Type="Row" />
                            <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Model" Function="Count" sap:VirtualizedContainerService.HintSize="382,86.4" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_2" Type="Value" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:CreatePivotTableXv2.Body>
                      <ueab:CreatePivotTableXv2.DestinationRange>
                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">Excel.Sheet["Summary tables"].Range["A:B"]</CSharpValue>
                        </InArgument>
                      </ueab:CreatePivotTableXv2.DestinationRange>
                      <ueab:CreatePivotTableXv2.Range>
                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">Excel.Sheet["ScrapeData"]</CSharpValue>
                        </InArgument>
                      </ueab:CreatePivotTableXv2.Range>
                    </ueab:CreatePivotTableXv2>
                    <ueab:InsertExcelChartX ChartCategory="Pie" ChartHeight="211" ChartType="xlPie" ChartWidth="355" DisplayName="Insert Chart" sap:VirtualizedContainerService.HintSize="438.8,240" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_7" Left="60" Top="20">
                      <ueab:InsertExcelChartX.InsertIntoSheet>
                        <InArgument x:TypeArguments="ue:ISheetRef">
                          <CSharpValue x:TypeArguments="ue:ISheetRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">Excel.Sheet["Sheet 2"]</CSharpValue>
                        </InArgument>
                      </ueab:InsertExcelChartX.InsertIntoSheet>
                      <ueab:InsertExcelChartX.InsertedChart>
                        <OutArgument x:TypeArguments="ue:IChartRef">
                          <CSharpReference x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">Chart1</CSharpReference>
                        </OutArgument>
                      </ueab:InsertExcelChartX.InsertedChart>
                      <ueab:InsertExcelChartX.Range>
                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">Excel.Sheet["Summary tables"].Range["A:B"]</CSharpValue>
                        </InArgument>
                      </ueab:InsertExcelChartX.Range>
                    </ueab:InsertExcelChartX>
                    <ueab:UpdateChartX DisplayName="Update Chart" sap:VirtualizedContainerService.HintSize="438.8,368" sap2010:WorkflowViewState.IdRef="UpdateChartX_1">
                      <ueab:UpdateChartX.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueabc:ModifyChartTitleModification DisplayName="Modify Chart Title" sap:VirtualizedContainerService.HintSize="386.8,81.2" sap2010:WorkflowViewState.IdRef="ModifyChartTitleModification_1" Title="Car Brands" />
                            <ueabc:ShowHideDataLabelsModification DisplayName="Show/Hide Data Labels" sap:VirtualizedContainerService.HintSize="386.8,54.8" sap2010:WorkflowViewState.IdRef="ShowHideDataLabelsModification_1" ShowDataLabels="True" />
                            <ueabc:ShowHideLegendModification DisplayName="Show/Hide Legend" sap:VirtualizedContainerService.HintSize="386.8,54.8" sap2010:WorkflowViewState.IdRef="ShowHideLegendModification_1" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:UpdateChartX.Body>
                      <ueab:UpdateChartX.Chart>
                        <InArgument x:TypeArguments="ue:IChartRef">
                          <CSharpValue x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">Chart1</CSharpValue>
                        </InArgument>
                      </ueab:UpdateChartX.Chart>
                    </ueab:UpdateChartX>
                    <ueab:CreatePivotTableXv2 DisplayName="Create Pivot Table" sap:VirtualizedContainerService.HintSize="438.8,434.4" sap2010:WorkflowViewState.IdRef="CreatePivotTableXv2_3" LayoutRowType="Compact" TableName="Average Price for Car Brand" ValuesMode="Columns">
                      <ueab:CreatePivotTableXv2.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Make" Function="Sum" sap:VirtualizedContainerService.HintSize="382,86.4" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_3" Type="Row" />
                            <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Price ($)" Function="Average" sap:VirtualizedContainerService.HintSize="382,86.4" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_4" Type="Value" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:CreatePivotTableXv2.Body>
                      <ueab:CreatePivotTableXv2.DestinationRange>
                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">Excel.Sheet["Summary tables"].Range["D:E"]</CSharpValue>
                        </InArgument>
                      </ueab:CreatePivotTableXv2.DestinationRange>
                      <ueab:CreatePivotTableXv2.Range>
                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">Excel.Sheet["ScrapeData"]</CSharpValue>
                        </InArgument>
                      </ueab:CreatePivotTableXv2.Range>
                    </ueab:CreatePivotTableXv2>
                    <ueab:InsertExcelChartX ChartCategory="Column" ChartHeight="211" ChartType="xlColumnStacked" ChartWidth="355" DisplayName="Insert Chart" sap:VirtualizedContainerService.HintSize="438.8,240" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_8" Left="60" Top="20">
                      <ueab:InsertExcelChartX.InsertIntoSheet>
                        <InArgument x:TypeArguments="ue:ISheetRef">
                          <CSharpValue x:TypeArguments="ue:ISheetRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">Excel.Sheet["Sheet 3"]</CSharpValue>
                        </InArgument>
                      </ueab:InsertExcelChartX.InsertIntoSheet>
                      <ueab:InsertExcelChartX.InsertedChart>
                        <OutArgument x:TypeArguments="ue:IChartRef">
                          <CSharpReference x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">Chart2</CSharpReference>
                        </OutArgument>
                      </ueab:InsertExcelChartX.InsertedChart>
                      <ueab:InsertExcelChartX.Range>
                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">Excel.Sheet["Summary tables"].Range["D:E"]</CSharpValue>
                        </InArgument>
                      </ueab:InsertExcelChartX.Range>
                    </ueab:InsertExcelChartX>
                    <ueab:UpdateChartX DisplayName="Update Chart" sap:VirtualizedContainerService.HintSize="438.8,368" sap2010:WorkflowViewState.IdRef="UpdateChartX_2">
                      <ueab:UpdateChartX.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueabc:ModifyChartTitleModification DisplayName="Modify Chart Title" sap:VirtualizedContainerService.HintSize="386.8,81.2" sap2010:WorkflowViewState.IdRef="ModifyChartTitleModification_2" Title="Average Price for Car Brand" />
                            <ueabc:ShowHideLegendModification DisplayName="Show/Hide Legend" sap:VirtualizedContainerService.HintSize="386.8,54.8" sap2010:WorkflowViewState.IdRef="ShowHideLegendModification_2" />
                            <ueabc:ShowHideDataLabelsModification DisplayName="Show/Hide Data Labels" sap:VirtualizedContainerService.HintSize="386.8,54.8" sap2010:WorkflowViewState.IdRef="ShowHideDataLabelsModification_2" ShowDataLabels="True" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:UpdateChartX.Body>
                      <ueab:UpdateChartX.Chart>
                        <InArgument x:TypeArguments="ue:IChartRef">
                          <CSharpValue x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">Chart2</CSharpValue>
                        </InArgument>
                      </ueab:UpdateChartX.Chart>
                    </ueab:UpdateChartX>
                    <ueab:CreatePivotTableXv2 DisplayName="Create Pivot Table" sap:VirtualizedContainerService.HintSize="438.8,434.4" sap2010:WorkflowViewState.IdRef="CreatePivotTableXv2_4" LayoutRowType="Compact" TableName="Average Mileage for Car Brand" ValuesMode="Columns">
                      <ueab:CreatePivotTableXv2.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Make" Function="Sum" sap:VirtualizedContainerService.HintSize="382,86.4" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_5" Type="Row" />
                            <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Mile Age (km)" Function="Average" sap:VirtualizedContainerService.HintSize="382,86.4" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_6" Type="Value" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:CreatePivotTableXv2.Body>
                      <ueab:CreatePivotTableXv2.DestinationRange>
                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">Excel.Sheet["Summary tables"].Range["G:H"]</CSharpValue>
                        </InArgument>
                      </ueab:CreatePivotTableXv2.DestinationRange>
                      <ueab:CreatePivotTableXv2.Range>
                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">Excel.Sheet["ScrapeData"]</CSharpValue>
                        </InArgument>
                      </ueab:CreatePivotTableXv2.Range>
                    </ueab:CreatePivotTableXv2>
                    <ueab:InsertExcelChartX ChartCategory="Column" ChartHeight="211" ChartType="xlColumnStacked" ChartWidth="355" DisplayName="Insert Chart" sap:VirtualizedContainerService.HintSize="438.8,240" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_9" Left="60" Top="20">
                      <ueab:InsertExcelChartX.InsertIntoSheet>
                        <InArgument x:TypeArguments="ue:ISheetRef">
                          <CSharpValue x:TypeArguments="ue:ISheetRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">Excel.Sheet["Sheet 4"]</CSharpValue>
                        </InArgument>
                      </ueab:InsertExcelChartX.InsertIntoSheet>
                      <ueab:InsertExcelChartX.InsertedChart>
                        <OutArgument x:TypeArguments="ue:IChartRef">
                          <CSharpReference x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">Chart3</CSharpReference>
                        </OutArgument>
                      </ueab:InsertExcelChartX.InsertedChart>
                      <ueab:InsertExcelChartX.Range>
                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">Excel.Sheet["Summary tables"].Range["G:H"]</CSharpValue>
                        </InArgument>
                      </ueab:InsertExcelChartX.Range>
                    </ueab:InsertExcelChartX>
                    <ueab:UpdateChartX DisplayName="Update Chart" sap:VirtualizedContainerService.HintSize="438.8,368" sap2010:WorkflowViewState.IdRef="UpdateChartX_3">
                      <ueab:UpdateChartX.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueabc:ModifyChartTitleModification DisplayName="Modify Chart Title" sap:VirtualizedContainerService.HintSize="386.8,81.2" sap2010:WorkflowViewState.IdRef="ModifyChartTitleModification_3" Title="Average Mileage for Car Brand" />
                            <ueabc:ShowHideLegendModification DisplayName="Show/Hide Legend" sap:VirtualizedContainerService.HintSize="386.8,54.8" sap2010:WorkflowViewState.IdRef="ShowHideLegendModification_3" />
                            <ueabc:ShowHideDataLabelsModification DisplayName="Show/Hide Data Labels" sap:VirtualizedContainerService.HintSize="386.8,54.8" sap2010:WorkflowViewState.IdRef="ShowHideDataLabelsModification_3" ShowDataLabels="True" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:UpdateChartX.Body>
                      <ueab:UpdateChartX.Chart>
                        <InArgument x:TypeArguments="ue:IChartRef">
                          <CSharpValue x:TypeArguments="ue:IChartRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">Chart3</CSharpValue>
                        </InArgument>
                      </ueab:UpdateChartX.Chart>
                    </ueab:UpdateChartX>
                    <ueab:SaveAsPdfX DestinationPdfPath=".\\report.pdf" DisplayName="Save Excel File As PDF" sap:VirtualizedContainerService.HintSize="438.8,164" sap2010:WorkflowViewState.IdRef="SaveAsPdfX_1" SaveQuality="StandardQuality">
                      <ueab:SaveAsPdfX.EndPage>
                        <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                          <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="3" />
                        </InArgument>
                      </ueab:SaveAsPdfX.EndPage>
                      <ueab:SaveAsPdfX.StartPage>
                        <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                          <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="1" />
                        </InArgument>
                      </ueab:SaveAsPdfX.StartPage>
                      <ueab:SaveAsPdfX.Workbook>
                        <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                          <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">Excel</CSharpValue>
                        </InArgument>
                      </ueab:SaveAsPdfX.Workbook>
                    </ueab:SaveAsPdfX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
  </Sequence>
</Activity>